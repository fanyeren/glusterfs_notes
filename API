The Gluster Native Client is a POSIX conformant, FUSE-based client running in user space.
Gluster Native Client is the recommended method for accessing volumes when high concurrency
and high write performance is required. 
When reading many small files, the native NFS client will perform better. 



Gluster offers multiple ways for users to access volumes in a Gluster storage cluster:

Gluster Native Client - This method provides high concurrency, performance and transparent failover in GNU/Linux clients.
The Gluster Native Client is POSIX conformant. For accessing volumes using gluster native protocol, you need to install
gluster native client. For more information, see Gluster Native Client.


NFS - This method provides access to gluster volumes with NFS v3. Extensive testing has be done on GNU/Linux clients
and NFS implementation in other operating system, such as FreeBSD, and Mac OS X, as well as Windows 7 (Professional
and Up), Windows Server 2003, and others, may work with gluster NFS server implementation. You must install nfs-common
package on both servers and clients (only for Debian-based) distribution. For more information, see NFS


CIFS - This method provides access to volumes when using Microsoft Windows as well as SAMBA clients. For this access
method, Samba packages need to be present on the client side. For more information, see CIFS. 

    
    

(1) Gluster环境初始化
glfs = glfs_new(“volname”);
glfs_set_volfile_server(glfs, transport, server, port);
glfs_init(glfs)

(2) libgfapi接口调用
glfs_preadv_async(), glfs_writev_async()
glfs_open(), glfs_creat(), glfs_close()
glfs_truncate(), glfs_fstat()
glfs_fsync_async()

(3) Gluster环境释放
glfs_fini()




/* glfs_example.c */
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include "api/glfs.h"
#include "api/glfs-handles.h"
#include <string.h>
#include <time.h>

int
main (int argc, char *argv[])
{
    glfs_t    *fs2 = NULL;
    int        ret = 0;
    glfs_fd_t *fd = NULL;
    glfs_fd_t *fd2 = NULL;
    char       readbuf[32];
    char       writebuf[32];
    char      *filename = "/filename2";

    if (argc != 3) {
        printf ("Expect following args\n\t%s <volname> <hostname>\n", argv[0]);
        return -1;
    }

    /* 初始化gluster环境 */
    fs2 = glfs_new (argv[1]);
    if (!fs2) {
        fprintf (stderr, "glfs_new: returned NULL\n");
        return 1;
    }
    ret = glfs_set_volfile_server (fs2, "tcp", argv[2], 24007);
    ret = glfs_set_logging (fs2, "/dev/stderr", 1);
    ret = glfs_init (fs2);
    fprintf (stderr, "glfs_init: returned %d\n", ret);

    /* 进行libgfapi函数调用 */
    fd = glfs_creat (fs2, filename, O_RDWR, 0644);
    fprintf (stderr, "%s: (%p) %s\n", filename, fd, strerror (errno));

    fd2 = glfs_open (fs2, filename, O_RDWR);
    fprintf (stderr, "%s: (%p) %s\n", filename, fd, strerror (errno));

    sprintf (writebuf, "hi there\n");
    ret = glfs_write (fd, writebuf, 32, 0);

    glfs_lseek (fd2, 0, SEEK_SET);
    ret = glfs_read (fd2, readbuf, 32, 0);
    printf ("read %d, %s", ret, readbuf);

    glfs_close (fd);
    glfs_close (fd2);

    /* Gluster环境释放 */
    glfs_fini (fs2);

    return ret;
}




#  gcc -o glfs_example glfs_example.c -L /usr/lib64/ -lgfapi -I /usr/include/glusterfs/


Gluster社区开发者基于libgfapi实现了Samba VFS plugin，从而可以绕开FUSE实现Samba与Gluster的无缝集成，大
幅提升了CIFS访问性能。目前Samba VFS plugin相对稳定，可以深入进行测试验证，勇于偿鲜者可以考虑生产环境试用。



smb.conf
[global]
    local master = no
    max protocol = SMB2
    posix locking = no
    guest account = nobody
    map to guest = bad password
    
    security = user
    passdb backend = tdbsam

    kernel oplocks = no
    
[share_fuse]
    comment = None
    path = /glfs
    browseable = yes
    read only = no
    create mask = 0744
    directory mask = 0755
    guest ok = Yes

[share_api]
    comment = None
    vfs object = glusterfs
    glusterfs:volume = test
    path = /
    browseable = yes
    read only = no
    create mask = 0744
    directory mask = 0755
    guest ok = yes



git clone git://forge.gluster.org/samba-glusterfs/samba-glusterfs-vfs.git

cd ~/samba-3.6.9/source3
./configure

cd ~/samba-glusterfs-vfs
./autogen.sh
./configure -with-samba-source=~/samba-3.6.9/source3/
make & make install
cp /usr/local/samba/lib/vfs/glusterfs.so  /usr/lib64/samba//vfs/
